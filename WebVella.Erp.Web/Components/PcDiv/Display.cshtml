@addTagHelper *, WebVella.Erp.Plugins.Core
@addTagHelper *, WebVella.Erp.Web
@addTagHelper *, WebVella.TagHelpers
@using WebVella.Erp.Web.Utils;
@using WebVella.Erp.Web.Components;
@using WebVella.Erp.Web.Models;
@using WebVella.Erp.Web;
@using WebVella.Erp.Exceptions;
@{
    var options = (PcDiv.PcDivOptions)ViewBag.Options;
    var node = (PageBodyNode)ViewBag.Node;
    var componentContext = (PageComponentContext)ViewBag.ComponentContext;
    var classValue = $"wv-div {options.Class}".TrimEnd();
}
@if (!bool.TryParse(options.IsVisible, out var isVisible) || isVisible)
{
    <div id="@options.Id" class="@classValue" name="@options.Name">
        @foreach (var childNode in node.Nodes)
        {
            var nodeComponentName = "";
            if (childNode != null)
            {
                var nameArray = childNode.ComponentName.Split('.');
                nodeComponentName = nameArray[nameArray.Length - 1];
            }
            if (!String.IsNullOrWhiteSpace(nodeComponentName))
            {
                var childOptions = PageUtils.ConvertStringToJObject(childNode.Options.ToString());
                var pcContext = new PageComponentContext(childNode, componentContext.DataModel, ComponentMode.Display, childOptions, componentContext.Items);
                @await Component.InvokeAsync(nodeComponentName, new { context = pcContext })
            }
        }
    </div>
}
